diff --git a/include/mbedtls/x509_crt.h b/include/mbedtls/x509_crt.h
index aa4595706..d43f2a17b 100644
--- a/include/mbedtls/x509_crt.h
+++ b/include/mbedtls/x509_crt.h
@@ -374,6 +374,11 @@ typedef void mbedtls_x509_crt_restart_ctx;
  * new algorithms are added to the library. New minor versions of Mbed TLS will
  * not reduce this profile unless serious security concerns require it.
  */
+#ifdef __IMPORT
+__declspec (dllimport)
+#else
+__declspec (dllexport)
+#endif
 extern const mbedtls_x509_crt_profile mbedtls_x509_crt_profile_default;
 
 /**
@@ -386,6 +391,11 @@ extern const mbedtls_x509_crt_profile mbedtls_x509_crt_profile_next;
 /**
  * NSA Suite B profile.
  */
+#ifdef __IMPORT
+__declspec (dllimport)
+#else
+__declspec (dllexport)
+#endif
 extern const mbedtls_x509_crt_profile mbedtls_x509_crt_profile_suiteb;
 
 /**
diff --git a/library/CMakeLists.txt b/library/CMakeLists.txt
index 0884f57ae..141c0b3b9 100644
--- a/library/CMakeLists.txt
+++ b/library/CMakeLists.txt
@@ -110,6 +110,7 @@ set(src_tls
     ssl_tls13_server.c
     ssl_tls13_client.c
     ssl_tls13_generic.c
+    mbedtls_wrapper.c
 )
 
 if(GEN_FILES)
@@ -288,6 +289,9 @@ if(USE_SHARED_MBEDTLS_LIBRARY)
     add_library(${mbedtls_target} SHARED ${src_tls})
     set_target_properties(${mbedtls_target} PROPERTIES VERSION 3.2.1 SOVERSION 18)
     target_link_libraries(${mbedtls_target} PUBLIC ${libs} ${mbedx509_target})
+
+    set_target_properties(${mbedtls_target} PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS true)
+    set_target_properties(${mbedx509_target} PROPERTIES WINDOWS_EXPORT_ALL_SYMBOLS true)
 endif(USE_SHARED_MBEDTLS_LIBRARY)
 
 foreach(target IN LISTS target_libraries)
diff --git a/library/mbedtls_wrapper.c b/library/mbedtls_wrapper.c
new file mode 100644
index 000000000..3ef6ed7e7
--- /dev/null
+++ b/library/mbedtls_wrapper.c
@@ -0,0 +1,69 @@
+#include <string.h>
+
+#include "mbedtls/ctr_drbg.h"
+#include "mbedtls/entropy.h"
+#include "mbedtls/ssl.h"
+
+struct wrapper_context
+{
+	mbedtls_ssl_context context; /* wrapper_context のポインターは mbedtls_ssl_context として使える */
+	mbedtls_ssl_config config;
+	mbedtls_x509_crt cacert;
+	mbedtls_ctr_drbg_context ctr_drbg;
+	mbedtls_entropy_context entropy;
+} wrapper_context_t;
+
+extern int wrapper_init(struct wrapper_context* ctx, const unsigned char* certs_buf, size_t certs_len)
+{
+	mbedtls_ssl_init(&ctx->context);
+	mbedtls_ssl_config_init(&ctx->config);
+	mbedtls_entropy_init(&ctx->entropy);
+	mbedtls_ctr_drbg_init(&ctx->ctr_drbg);
+	mbedtls_x509_crt_init(&ctx->cacert);
+
+	const char* pers = "_wrapper";
+	if (mbedtls_ctr_drbg_seed(&ctx->ctr_drbg, mbedtls_entropy_func, &ctx->entropy, pers, strlen(pers)) != 0)
+	{
+		return 1;
+	}
+
+	if (mbedtls_x509_crt_parse(&ctx->cacert, certs_buf, certs_len) != 0)
+	{
+		return 2;
+	}
+
+	if (mbedtls_ssl_config_defaults(&ctx->config, MBEDTLS_SSL_IS_CLIENT, MBEDTLS_SSL_TRANSPORT_STREAM, MBEDTLS_SSL_PRESET_DEFAULT) != 0)
+	{
+		return 3;
+	}
+
+	mbedtls_ssl_conf_authmode(&ctx->config, MBEDTLS_SSL_VERIFY_OPTIONAL);
+	mbedtls_ssl_conf_ca_chain(&ctx->config, &ctx->cacert, NULL);
+	mbedtls_ssl_conf_rng(&ctx->config, mbedtls_ctr_drbg_random, &ctx->ctr_drbg);
+
+	if (mbedtls_ssl_setup(&ctx->context, &ctx->config) != 0)
+	{
+		return 4;
+	}
+
+	return 0;
+}
+
+extern const mbedtls_ssl_context* wrapper_get_ssl_context(const struct wrapper_context* ctx)
+{
+	return &ctx->context;
+}
+
+extern void wrapper_free(struct wrapper_context* ctx)
+{
+	mbedtls_x509_crt_free(&ctx->cacert);
+	mbedtls_ssl_config_free(&ctx->config);
+	mbedtls_ssl_free(&ctx->context);
+	mbedtls_ctr_drbg_free(&ctx->ctr_drbg);
+	mbedtls_entropy_free(&ctx->entropy);
+}
+
+extern int wrapper_sizeof_wrapper_context()
+{
+	return sizeof(wrapper_context_t);
+}
diff --git a/library/ssl_tls.c b/library/ssl_tls.c
index e60b82fa5..de8bcbbda 100644
--- a/library/ssl_tls.c
+++ b/library/ssl_tls.c
@@ -21,6 +21,7 @@
  *  http://www.ietf.org/rfc/rfc4346.txt
  */
 
+#define __IMPORT
 #include "common.h"
 
 #if defined(MBEDTLS_SSL_TLS_C)
diff --git a/programs/ssl/ssl_client2.c b/programs/ssl/ssl_client2.c
index d6724dfb1..141386927 100644
--- a/programs/ssl/ssl_client2.c
+++ b/programs/ssl/ssl_client2.c
@@ -17,6 +17,7 @@
  *  limitations under the License.
  */
 
+#define __IMPORT
 #define MBEDTLS_ALLOW_PRIVATE_ACCESS
 
 #include "ssl_test_lib.h"
diff --git a/programs/ssl/ssl_server2.c b/programs/ssl/ssl_server2.c
index 8e432bde8..6cc84927b 100644
--- a/programs/ssl/ssl_server2.c
+++ b/programs/ssl/ssl_server2.c
@@ -17,6 +17,7 @@
  *  limitations under the License.
  */
 
+#define __IMPORT
 #define MBEDTLS_ALLOW_PRIVATE_ACCESS
 
 #include "ssl_test_lib.h"
