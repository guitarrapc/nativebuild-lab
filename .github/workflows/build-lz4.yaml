name: Build lz4

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      create-pullrequest:
        description: true to craete PR for artifacts.
        required: true
        type: boolean
        default: false
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "*.md"

# OUTPUT_DIR name follow to .NET RID rule. https://docs.microsoft.com/ja-jp/dotnet/core/rid-catalog

# android-x64, ios-arm64, linux-x64, osx-x64, win-x64

env:
  app: lz4

jobs:
  android:
    strategy:
      fail-fast: false
      matrix:
        target: ["x86", "x64", "arm", "arm64"]
    env:
      OUTPUT_DIR: _out/android-${{ matrix.target }}
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          persist-credentials: false
      - run: git fetch --tags
        working-directory: ${{ env.app }}
      - name: Build
        run: bash ./builder/${{ env.app }}/${{ env.app }}-android-${{ matrix.target }}.sh
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  ios:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: arm64
            os: macos-15
    env:
      OUTPUT_DIR: _out/ios-${{ matrix.target }}
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          persist-credentials: false
      - run: git fetch --tags
        working-directory: ${{ env.app }}
      - name: Build
        run: bash ./builder/${{ env.app }}/${{ env.app }}-ios-arm64.sh
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  linux:
    strategy:
      fail-fast: false
      matrix:
        target: ["x64", "arm64"]
    env:
      OUTPUT_DIR: _out/linux-${{ matrix.target }}
    permissions:
      contents: read
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          persist-credentials: false
      - run: git fetch --tags
        working-directory: ${{ env.app }}
      - name: Build
        run: bash ./builder/${{ env.app }}/${{ env.app }}-linux-${{ matrix.target }}.sh
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  macos:
    strategy:
      fail-fast: false
      matrix:
        target: ["x64", "arm64"]
    env:
      OUTPUT_DIR: _out/osx-${{ matrix.target }}
    permissions:
      contents: read
    runs-on: macos-15
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          persist-credentials: false
      - run: git fetch --tags
        working-directory: ${{ env.app }}
      # host runner is x86_64 and cannot link x86_64 `zlib` & `lzma` to arm64 build
      - run: brew uninstall --ignore-dependencies lz4 xz
        if: ${{ matrix.target == 'arm64' }}
      - name: Build
        run: bash ./builder/${{ env.app }}/${{ env.app }}-darwin-${{ matrix.target }}.sh
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  windows:
    strategy:
      fail-fast: false
      matrix:
        target: ["x64", "x86", "arm64"]
    env:
      OUTPUT_DIR: _out\win-${{ matrix.target }}
    permissions:
      contents: read
    runs-on: windows-2022
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          persist-credentials: false
      - run: git fetch --tags
        working-directory: ${{ env.app }}
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@34cfbaee7f672c76950673338facd8a73f637506 # v1.1.3
      - name: Build
        run: builder\${{ env.app }}\${{ env.app }}-windows-${{ matrix.target }}.bat
        shell: cmd
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  pr:
    if: ${{ inputs.create-pullrequest == true }}
    needs: [android, ios, linux, macos, windows]
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
          persist-credentials: false
      - run: git fetch --tags
        working-directory: ${{ env.app }}
      - run: echo "name=value::$(git tag --points-at HEAD -l -n0 | grep "v" | tr -d '[:space:]')" | tee -a "$GITHUB_OUTPUT"
        id: version
        working-directory: ${{ env.app }}
      - uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: artifact
          path: _tmp
      - name: Copy to artifact
        run: |
          rm -rf ./artifact/${{ env.app }}
          mkdir -p ./artifact/${{ env.app }}
          cp -fR ./_tmp/* ./artifact/${{ env.app }}
      - name: Check for modified files
        id: git-check
        run: echo "name=modified::$(if [[ "$(git status --porcelain=v1 2>/dev/null | wc -l)" == "0" ]]; then echo "false"; else echo "true"; fi)" | tee -a "$GITHUB_OUTPUT"
      - if: steps.git-check.outputs.modified == 'true'
        name: Create PullRequest
        uses: peter-evans/create-pull-request@38e0b6e68b4c852a5500a94740f0e535e0d7ba54 # v4.2.4
        with:
          base: "main"
          branch: "auto/${{ env.app }}_tmp"
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          delete-branch: true
          title: "[${{ env.app }}] Update artifacts ${{ steps.version.outputs.value }}"
          body: |
            Update ${{ env.app }} artifacts for ${{ steps.version.outputs.value }} ðŸš€
          labels: |
            automated pr
